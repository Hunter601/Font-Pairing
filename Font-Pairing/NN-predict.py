import numpy as np
from sklearn.metrics.pairwise import cosine_similarity
import pickle


model = pickle.load(open('pickles/trained-NN-model.pickle', 'rb'))
pic_vectors = pickle.load(open('pickles/fontjoy-custom-vectors.pickle', 'rb'))

roboto = [0.19743283,0.37572315,0.33990896,0.3849424,0.09270387,0.015550153,0.25383738,0.10563625,0.7892855,0.57464296,0.035553697,0.46954656,0.7824417,0.42905372,0.22108346,0.23727024,0.6575961,0.43269363,0.5044037,0.39878163,0.19882856,0.08891124,0.0074807964,0.13149759,0.52543926,0.0070240656,0.057830244,0.016397111,0.3467281,0.72407454,1.0254369,1.5336729,0.0,1.2407569,0.3095538,0.035899792,0.0,0.015678877,1.2037535,0.0,0.3096535,0.5866501,0.23857823,0.14297074,0.543939,0.7826322,0.34009326,0.0,0.02117699,0.7892217,0.0876236,0.20237039,0.0,0.12583706,1.1938833,0.08386653,0.006003179,0.36394447,0.8959318,0.13921374,1.2941539,0.6120243,0.0,0.43828547,0.31724602,0.37550834,0.35269368,0.0815159,0.49252436,0.0117537975,0.11257342,1.0048157,0.36318588,0.3924441,0.774872,0.08326849,0.7769126,0.19555892,0.82360864,0.0587575,0.111780204,1.7511183,0.6554901,0.1260419,0.26201922,0.029972646,0.33858767,0.36640394,0.31398344,0.0,0.41506505,0.47754386,0.040306818,0.48757425,0.0783938,0.7037966,2.5169277,1.1146574,0.0,0.6004691,0.9765429,0.0,0.02245574,1.379856,1.0077813,6.054008,0.09159714,0.61589444,0.110858925,0.09289729,0.18774022,0.34175944,0.18947378,0.8478729,0.38028032,0.11895255,0.52012193,0.076766945,0.55518293,0.52933383,0.022804745,0.05528205,0.5181139,0.17639607,0.9945445,0.11464945,0.9209073,0.0086608445,0.67923224,0.072396405,0.47159654,0.35469386,0.104335405,0.012392202,0.20497677,0.3968562,1.5164876,0.0,0.16911781,0.36619627,0.010208371,0.8638662,0.83336717,0.00059216056,0.3702298,0.15970805,0.024230998,1.9061824,0.5056815,0.08234357,0.09583053,0.7128303,0.542389,0.69026035,0.687384,0.3271957,0.5601447,0.28721774,0.037396297,0.23996037,0.36954138,1.4768082,0.06415154,0.30813867,0.017660238,0.3937102,0.02018162,0.50583756,0.116944335,4.029807,0.46599245,0.27633172,0.7769076,0.0026482665,0.39037198,1.5908868,0.5660962,0.2508407,0.3083023,0.74208874,0.51848215,0.11503568,0.0026822079,1.4410424,0.03446497,0.35546327,1.0851054,0.037730604,2.5864732,0.9324793,0.15130274,0.5431745,1.7592174,0.21923904,1.2561873,0.072111905,1.3352317,1.0828305,0.63416547,0.014698799,0.2514167,1.1833141,0.870583,0.10914628,0.042026326,0.06682506,0.27690223,0.10605907,0.45862976,0.5105472,0.052081104,0.036026865,0.15992826,0.002768918,0.26484117,1.5260493,0.06600734,0.30056983,0.19290619,0.00457774,0.4984327,0.99508286,1.0865673,0.114797756,0.74307436,0.6219154,0.6928668,0.14792852,0.4304296,0.762325,0.27859893,0.57290626,0.033824258,0.5500896,0.046481527,0.24185342,0.5232798,0.010945462,1.1373265,0.3848659,0.8651992,1.0336521,0.0023178149,0.95684004,0.0,0.107705496,0.6371066,0.16908582,1.1244304,0.068832435,0.06910829,0.31229296,0.29029748,0.028796853,0.18509987,1.3516026,0.28145444,1.1442665,0.034652926,0.173587,0.098753646,0.1569364,1.2684904,0.019821797,1.1319445,0.08444244,0.2867849,0.029334696,1.4540228,0.4941379,0.044195987,0.4241697,0.30153933,0.3048206,0.17064112,1.5599401,0.18010205,0.8386975,1.1262069,0.18437934,0.13080814,0.32626563,2.5268543,0.0,0.009450333,0.005037662,0.45994315,0.09835888,0.0,0.033779174,1.30997,0.3474845,0.029063175,0.07188263,0.3086828,0.058548402,0.79044765,0.07879544,0.30027503,1.4738368,2.287451,0.44239986,0.7774597,0.26806358,0.60121274,0.051042255,0.23825277,0.54438424,0.12887694,0.7424006,0.036363237,0.025428193,0.0069820834,0.004410468,0.31205902,0.02944273,0.11784582,0.30400768,1.0367217,0.03523582,1.9475384,1.1344515,0.22753052,0.044580217,0.028034456,0.527659,0.018883338,0.9477794,0.14041248,0.14650802,0.8077659,0.0503614,0.8558508,0.0070959018,1.8194656,0.15864933,3.0164194,0.0068279365,0.78193367,1.8234793,0.12501054,0.0071135946,0.53934103,0.8824315,1.6379952,0.43660834,0.18095262,0.57291585,0.023836398,0.57741207,0.82500553,0.590686,0.10766633,0.015132622,0.8280917,1.1414851,0.109193265,0.0010306841,0.10624154,0.44271967,2.6364033,1.1030968,0.530774,0.04493558,0.30399337,0.0072424468,1.440158,0.02106713,0.01747766,0.67330813,0.004102368,0.5360196,0.045214698,0.37395042,0.62665063,1.1250246,0.3998231,0.79209244,0.4214166,1.0396696,0.29173905,0.6730149,1.0087366,1.043659,0.016485292,0.0,0.02739593,0.07151072,0.41082785,0.18523477,0.38247818,0.24566315,0.5647724,0.3324872,0.020793416,0.09863443,0.34919685,0.44390777,1.6185228,0.0,0.7253069,0.8003452,0.040282093,0.12901507,0.85752463,0.41848487,0.90287095,0.022602314,1.3045353,0.042775635,0.4866524,0.6782837,0.035806715,0.04239003,0.58704317,0.4270873,0.36552975,0.06932466,0.14717056,0.4691549,0.0051324805,0.021636043,0.058210406,2.510849,0.37725487,0.0,0.15880287,0.0,0.0,0.10455091,0.13651961,1.0451251,0.39682323,0.0,0.17191307,0.39784202,0.062078856,0.11334473,0.10238254,0.12983337,0.21750143,0.1864078,0.36815858,0.30703077,0.017561328,0.10436739,0.42150193,0.19661568,0.07640615,1.3156437,2.3663561,0.35406435,1.735784,0.100028016,0.24419487,0.8197945,0.3931664,0.32849202,0.5612661,0.3306816,0.82531846,0.12023424,0.0,0.9092606,0.9391672,1.2776381,0.48966557,0.84882706,0.08878156,0.516524,0.0876722,0.45845163,0.003512239,0.16870442,0.0034858226,0.048942965,0.11822355,0.30382234,0.21630965,1.0398359,1.1429486,0.5247871,0.5777516,0.00437198,1.0316837,0.019782264,0.27218097,0.28299323,0.7284063,0.0766787,0.39191383,1.6307738,0.03374484,0.0,0.09246207,0.17825577,1.5757829,0.0059258477,0.068453215,1.1763996,1.1525041,0.57394075,0.27594036,0.11358836,0.029621154,0.35694453,0.97902536,1.0218318,0.037002973,0.5582361,0.020120334,0.23263803]
roboto = np.array(roboto, dtype='float')
roboto = roboto.transpose()

print(roboto.shape())

to_match = model.predict(roboto)


sims = {}
for key in list(pic_vectors.keys()):
    sims[key] = cosine_similarity(to_match.reshape((1, -1)), pic_vectors[key].reshape((1, -1)))[0][0]

d_view = [(v, k) for k, v in sims.items()]
d_view.sort(reverse=True)
for v, k in d_view:
    print(v, k)